name: Golang CI Workflow

on:
  workflow_call:
    inputs:
      GO_VERSION:
        required: false
        type: string
        default: "1.18"
      TESTS_LOCATION:
        required: false
        type: string
        default: "./..."
    secrets:
      REPO_GITHUB_TOKEN:
        required: true

jobs:
  test:
    name: Test with coverage
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "${{ inputs.GO_VERSION }}"
      - name: Check out code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          go mod download
      - name: Lint source code
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.45

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          args: --timeout=5m --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
      - name: Run Unit tests
        run: |
          go test ${{ inputs.TESTS_LOCATION }} -v -coverpkg=${{ inputs.TESTS_LOCATION }} -race -covermode atomic -coverprofile=./profile.cov
      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}
        run: goveralls -coverprofile=./profile.cov -service=github
